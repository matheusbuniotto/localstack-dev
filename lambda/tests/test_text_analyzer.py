"""
Testes mÃ­nimos para TextAnalyzer.
Validar anÃ¡lise bÃ¡sica de texto.
"""

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', 'src'))

from core.text_analyzer import TextAnalyzer


def test_text_analyzer_basic():
    """Teste bÃ¡sico: anÃ¡lise de texto simples."""
    analyzer = TextAnalyzer()
    
    # Texto de teste
    text = "OlÃ¡ mundo! Este Ã© um teste simples. Vamos contar palavras."
    
    # Executar anÃ¡lise
    result = analyzer.analyze_text(text)
    
    # ValidaÃ§Ãµes bÃ¡sicas
    assert result['word_count'] == 10
    assert result['char_count'] == len(text)
    assert result['sentence_count'] == 3
    assert result['processing_time'] >= 0
    assert isinstance(result['most_common_words'], list)
    
    print("âœ… TextAnalyzer - Teste bÃ¡sico passou!")


def test_text_analyzer_empty():
    """Teste edge case: texto vazio."""
    analyzer = TextAnalyzer()
    
    # Texto vazio
    text = ""
    
    # Executar anÃ¡lise
    result = analyzer.analyze_text(text)
    
    # ValidaÃ§Ãµes
    assert result['word_count'] == 0
    assert result['char_count'] == 0
    assert result['sentence_count'] == 0
    assert result['processing_time'] >= 0
    
    print("âœ… TextAnalyzer - Teste texto vazio passou!")


def test_text_analyzer_structure():
    """Teste estrutura: verificar se retorna campos esperados."""
    analyzer = TextAnalyzer()
    
    text = "Teste de estrutura."
    result = analyzer.analyze_text(text)
    
    # Campos obrigatÃ³rios
    required_fields = [
        'word_count', 'char_count', 'line_count', 'sentence_count',
        'most_common_words', 'processing_time', 'text_stats'
    ]
    
    for field in required_fields:
        assert field in result, f"Campo '{field}' nÃ£o encontrado no resultado"
    
    print("âœ… TextAnalyzer - Teste estrutura passou!")


if __name__ == "__main__":
    test_text_analyzer_basic()
    test_text_analyzer_empty()
    test_text_analyzer_structure()
    print("\nðŸŽ‰ Todos os testes do TextAnalyzer passaram!")